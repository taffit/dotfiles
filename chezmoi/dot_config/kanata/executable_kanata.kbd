(defcfg
  process-unmapped-keys		yes	;;|no| enable processing of keys that are not in defsrc, useful if mapping a few keys in defsrc instead of most of the keys on your keyboard. Without this, the tap-hold-release and tap-hold-press actions will not activate for keys that are not in defsrc. Disabled because some keys may not work correctly if they are intercepted. E.g. rctl/altgr on Windows; see the windows-altgr configuration item above for context.
  ;;log-layer-changes    		yes	;;|no| overhead
  ;;tray-icon ".\icon\transparent.png" ;; should activate for layers without icons like '5no-icn'
  ;;opt                   	val  	  |≝|
  ;;icon-match-layer-name   	yes  	;;|yes| match layer name to icon files even without an explicit (icon name.ico) config
  ;;tooltip-layer-changes   	yes  	;;|false|
  ;;tooltip-show-blank      	yes  	;;|no|
  ;;tooltip-duration        	500  	;;|500|
  ;;tooltip-size            	24,24	;;|24 24|
  notify-cfg-reload       	yes  	;;|yes|
  notify-cfg-reload-silent	no   	;;|no|
  notify-error            	yes  	;;|yes|
  danger-enable-cmd yes
  windows-altgr add-lctl-release
  concurrent-tap-hold yes   ;; for chords
  sequence-input-mode visible-backspaced
)

(defvar
  tap-time 150
  longer-tap-time 200
  hold-time 200
  longer-hold-time 300
  tt $tap-time
  ltt $longer-tap-time
  ht $hold-time
  lht $longer-hold-time
  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

;; defsrc is still necessary
(defsrc
  esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  grv 1 2 3 4 5 6 7 8 9 0 - = bspc
  tab q w e r t y u i o p [ ] 
  caps a s d f g h j k l ; ' ret
  lsft z x c v b n m , . / rsft
  lctl lmet lalt spc ralt rmet rctl
  del home end
)

(deftemplate switch-input (input)
  (cmd "C:\~NoInstall\System\Tools\ControlMyMonitor\ControlMyMonitor.exe" /SetValue "EB275U" 60 $input)
)
(deftemplate taphold (taptime holdtime key other-key)
  (multi f24 (tap-hold $taptime $holdtime $key $other-key))
)
(deftemplate tapholdpresslayer (key layer-if-pressed)
  (tap-hold-press 200 200 $key (layer-while-held $layer-if-pressed))
)
(deftemplate tapholdreleaselayer (key layer-if-released)
  (tap-hold-release 200 200 $key (layer-while-held $layer-if-released))
)
(deftemplate runscript (script)
  (cmd (concat "./scripts/" $script ".exe"))
)
(deftemplate homerowmodquicktyping (char mod)
  (switch 
    ((key-timing 3 less-than 250)) $char break
    () (tap-hold-release-timeout 200 500 $char $mod $char) break
  )
)
;; Home row mods
;; Another way by @dreamsofcode:
;;   a (multi f24 (tap-hold 150 200 a lmet))

;; From https://github.com/jtroo/kanata/blob/main/cfg_samples/home-row-mod-advanced.kbd
;; taking into account the pressing of keys on the other side, which should activate hold-action earlier
;;   tap (multi
;;    (layer-switch nomods)
;;    (on-idle-fakekey to-base tap 20)
;;   )
;;   a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)

;; From @gerhard-h at https://github.com/jtroo/kanata/discussions/1455
(deftemplate homerowmod (timeouthold char mod)
  (switch 
    ((key-timing 3 less-than 180)) $char break
    () (tap-hold-release 0 $timeouthold $char $mod) break
  )
)
;; More from @gerhard-h at https://github.com/gerhard-h/kmonad-keymaps/

;; From https://github.com/jtroo/kanata/discussions/1455
;;(deftemplate charmod (char mod)
;;  (switch 
;;    ((key-timing 3 less-than 450)) $char break
;;    () (tap-hold-release-timeout 200 500 $char $mod $char) break
;;  )
;;)

;; From https://github.com/argenkiwi/kenkyo/
;;(deftemplate charmod (char mod)
;;  (switch 
;;    ((key-timing 3 less-than 375)) $char break
;;    () (tap-hold-release-timeout 200 500 $char $mod $char) break
;;  )
;;)

;; Ideas:
;; - Something like "boss-key", i. e. a layer, where everything works normally to switch to constantly.
;;   See also the now-included fake-key to-default.
;; + Delete-forward-a-word, e. g. on caps-shift-backspace. Should be easily doable. Note, that somehow Ctrl-Backspace does this. Why? Power Toys? Autohotkey?
;; - Optimize home row mod using different timeouts, e. g. "angehalten" written quickly will lock the client (a -> l)
;; + Explore the possibilities using two keys pressed at the same time, e. g. to have a second possibility for Esc
;;   -> (s d) del word bckwrd, (d f) del word forward, (s f) del, (w e) Caps word, (f g) esc, (q t) default layer
;; + Switch to normal layer somehow, if anything breaks -> (q t)
;; - Possibility to add unicode-characters by code like ;u; using ahk
;; - Explore the possibility to add activation strings like ;u;

(defalias
  del-word (macro C-S-left bspc)
  del-word-fwd (macro C-S-right bspc)
  del-bspc (fork del @del-word (lsft rsft d k))
  bspc-or-word (fork bspc @del-word (lsft rsft d k))
  bspc-or-del (fork bspc (unshift del) (lsft rsft lmet rmet lctl rctl d k))
  middot (macro (unicode ·))
  ;;a (t! homerowmod $ht a lmet)
  ;;s (t! homerowmod $ht s lalt)
  ;;d (t! homerowmod $ht d lsft)
  ;;f (t! homerowmod $ht f lctl)
  ;;j (t! homerowmod $ht j rctl)
  ;;k (t! homerowmod $ht k rsft)
  ;;l (t! homerowmod $ht l ralt)
  ;;; (t! homerowmod $ht ; rmet)
  ;;a (t! charmod a lmet)
  ;;s (t! charmod s lalt)
  ;;d (t! charmod d lsft)
  ;;f (t! charmod f lctl)
  ;;j (t! charmod j rctl)
  ;;k (t! charmod k rsft)
  ;;l (t! charmod l ralt)
  ;;; (t! charmod ; rmet)
  * S-8
  + S-=
  cwrd (caps-word 2000)
  cwrdt (caps-word-custom-toggle
    2000
    (a b c d e f g h i j k l m n o p q r s t u v w x y z)
    (0 1 2 3 4 5 6 7 8 9 0 kp0 kp1 kp2 kp3 kp4 kp5 kp6 kp7 kp8 kp9 bspc del up down left rght)
  )
  paste-plain (fork (t! runscript paste_plain) (t! runscript paste_plain_type) (lsft rsft))
  center-cursor (t! runscript center_mouse)
  volume-up (t! runscript volume_up)
  volume-down (t! runscript volume_down)
  win-tab M-tab
  chng-win (macro C-A-tab left)
  cut C-x
  copy C-c
  paste C-v
  undo C-z
  redo C-y
  caps-mod (t! tapholdpresslayer esc caps-layer)
  grv-mod (t! tapholdpresslayer grv grv-layer)
  ;;win-mod (t! tapholdpresslayer lmet win-layer)
  ;;altgr-mod (t! tapholdpresslayer ralt altgr-layer)
)

(deffakekeys
  to-default (layer-switch default)
)
(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-default tap 20)
  )

  a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lsft $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lctl $left-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rctl $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) rsft $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) rmet $right-hand-keys)
)

;; Wrapping a top-level configuration item in a list beginning without
;; (environment (env-var-name env-var-value) ...configuration...)
;; will make the configuration only active if the environment variable matches.
(environment (COMPUTERNAME YIELCO-NB-44)
  (defalias
    switch_hdmi1 (template-expand switch-input 17)
    ;; t! is a shorthand for template-expand
    switch_hdmi2 (t! switch-input 18)
    switch_hdmi3 (t! switch-input 19)
    switch_dp (t! switch-input 15)
  )
)
(environment (COMPUTERNAME tafltpc)
  (defalias
    switch_hdmi1 (template-expand switch-input 17)
    ;; t! is a shorthand for template-expand
    switch_hdmi2 (t! switch-input 18)
    switch_hdmi3 (t! switch-input 19)
    switch_dp (t! switch-input 15)
  )
)

(deflayer default
  esc       f1 f2 f3 f4 f5 f6        f7 f8 f9 f10 f11 f12
  @grv-mod  1  2  3  4  5  6         7  8  9  0   -   =  @bspc-or-del
  tab       q  w  e  r  t            y u i o p [ ]
  @caps-mod a s @d f g               h @j @k @l ; ' ret
  lsft      z x c v b                n m , . / rsft
  lctl lmet lalt           spc       ralt rmet rctl
  del home end
)

(deflayer nomods
  esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  grv 1 2 3 4 5 6 7 8 9 0 - = bspc
  tab q w e r t y u i o p [ ] 
  caps a s d f g h j k l ; ' ret
  lsft z x c v b n m , . / rsft
  lctl lmet lalt spc ralt rmet rctl
  del home end
)

(deflayer caps-layer 
  lrld     XX XX XX XX XX XX    XX XX XX XX XX XX
  lrld     XX XX XX XX XX XX    XX XX XX XX @volume-down @volume-up @del-word
  @win-tab XX @cwrdt XX XX XX    home C-left C-right end XX XX XX
  XX       XX XX XX XX @center-cursor       left down up right XX XX _
  _        @undo @cut @copy @paste-plain XX    @chng-win XX XX @middot XX _ 
  _ _ _                      _                     caps _ _
  _ _ _
)

(deflayer grv-layer
  XX   XX XX XX XX XX XX   XX XX XX XX XX XX
  XX   @switch_hdmi1 @switch_hdmi2 @switch_hdmi3 @switch_dp XX XX   XX @* /  0 XX XX @del-word
  XX   XX XX XX XX XX      XX 7  8  9  - XX XX
  XX   XX XX XX XX XX      0  4  5  6  + XX _
  XX   XX XX XX XX XX      XX 1  2  3  . XX 
  XX XX XX             _           XX XX XX
  XX XX XX
)

(defchordsv2
  (w r) @cwrdt 50 all-released ()
  (d f) @del-word-fwd 50 all-released ()
  (s d) @del-word 50 all-released ()
  (s f) del 50 all-released ()
  (a f) bspc 50 all-released ()
  (f g) esc 50 all-released ()
  (q t) (layer-switch default) 50 all-released ()
)


;;(deftemplate seq (vk-name input-keys output-action)
;;    (defvirtualkeys $vk-name $output-action)
;;    (defseq $vk-name $input-keys)
;;)
;; template-expand has a shortened form: t!
;;(t! seq dotcom (nop0 nop1) (macro . c o m))
;;(defseq
;;  git-status (g s t)
;;  dotcom (. S-c)
;;)
;;(defvirtualkeys
;;  git-status (unshift (macro g i t spc s t a t u s))
;;  dotcom (unshift (macro . c o m))
;;)

#|
(deflayer win-layer
  _    _ _ _ _ _ _   _ _ _ _ _ _
  _    _ _ _ _ _ _   _ _ _ _ _ _ _
  _    _ _ _ _ _     _ _ _ _ _ _ _
  _    _ _ _ _ _     @center-cursor _ _ _ _ _ _
  _    _ _ _ @paste-plain _      _ _ _ _ _ _ 
  _ _ _           _          _ _ _
  _ _ _
)

(deflayer altgr-layer
  _    _ _ _ _ _ _     _ _ _ _ _ _
  _    _ _ _ _ _ _     _ _ _ _ _ _ @del-word
  _    _ @cwrd _ _ _   _ _ _ _ _ _ _
  _    _ _ _ _ _       @switch_hdmi1 @switch_hdmi2 @switch_hdmi3 @switch_dp _ _ _
  _    _ _ _ _ _       _ _ _ @middot _ _ 
  _ _ _            _         _ _ _
  _ _ _
)
|#

#|
(deflayer default-keyboard
  esc   f1 f2 f3 f4 f5 f6   f7 f8 f9 f10 f11 f12
  grv   1 2 3 4 5 6         7 8 9 0 - = bspc
  tab   q w e r t           y u i o p [ ] 
  caps  a s d f g           h j k l ; ' ret
  lsft  z x c v b           n m , . / rsft
  lctl lmet lalt     spc    ralt rmet rctl
  del home end
)
(deflayer name
  _    _ _ _ _ _ _   _ _ _ _ _ _
  _    _ _ _ _ _ _   _ _ _ _ _ _ _
  _    _ _ _ _ _     _ _ _ _ _ _ _
  _    _ _ _ _ _     _ _ _ _ _ _ _
  _    _ _ _ _ _     _ _ _ _ _ _ 
  _ _ _           _        _ _ _
  _ _ _
)
(deflayer no-name
  XX   XX XX XX XX XX XX   XX XX XX XX XX XX
  XX   XX XX XX XX XX XX   XX XX XX XX XX XX XX
  XX   XX XX XX XX XX      XX XX XX XX XX XX XX
  XX   XX XX XX XX XX      XX XX XX XX XX XX XX
  XX   XX XX XX XX XX      XX XX XX XX XX XX 
  XX XX XX             XX           XX XX XX
  XX XX XX
)
|#
